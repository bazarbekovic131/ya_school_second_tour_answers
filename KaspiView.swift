
struct KaspiView: View {
    var body: some View {
        NavigationView {
            VStack {
                VStack(alignment: .center){
                    HStack {
                        Text("Test")
                    }.frame(width: 200, height: 200).background(.black)
                    
                    Text("Покажите QR-код контролеру").padding(.top, 20).foregroundStyle(.secondary)
                }.padding()
                
                
                Divider()
                
                Text("996BX01").fontWeight(.bold).padding()
                
                Divider()
                
                VStack {
                    Text("06 января 2024 15:43")
                    Text("Сумма 90 Т")
                }.padding()
                
                HStack {
                    Image(systemName: "printer").frame(height: 100).foregroundColor(.blue)
                    Spacer()
                    Image(systemName: "square.and.arrow.up").frame(height: 100).foregroundColor(.blue)
                }.frame(maxWidth: 200)
                
                Button() {
                    
                } label: {
                    VStack {
                        Text("Вернуться в платежи").padding()
                    }
                    .background(.blue)
                    .frame(width: .infinity)
                }
            }.navigationTitle("Avtobys. Оплата проезда по QR")
        }
    }
}

#Preview {
    KaspiView()
}

// generated by Copilot
func generateQRCode(from string: String) -> UIImage? {
    let data = string.data(using: String.Encoding.ascii)
    
    if let filter = CIFilter(name: "CIQRCodeGenerator") {
        filter.setValue(data, forKey: "inputMessage")
        let transform = CGAffineTransform(scaleX: 3, y: 3)
        
        if let output = filter.outputImage?.transformed(by: transform) {
            let context = CIContext()
            if let cgImage = context.createCGImage(output, from: output.extent) {
                return UIImage(cgImage: cgImage)
            }
        }
    }
    
    return nil
}